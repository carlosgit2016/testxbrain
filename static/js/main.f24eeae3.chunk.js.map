{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/productsAction.js","components/Card/index.js","components/CheckOut/index.js","components/Client-Data/index.js","components/Products/index.js","components/Finalized-Purchase/index.js","redux/actions/index.js","components/app/App.js","redux/reducers/productsReducer.js","redux/reducers/index.js","index.js"],"names":["ADD_PRODUCTS_TO_CARD","RESET","addProductToCard","product","amount","type","useStyles","makeStyles","card","maxWidth","width","minHeight","minWidth","price","fontSize","method","fab","input","alignItems","grid","marginTop","AddComponent","props","changeAmountValue","event","op","stopPropagation","preventDefault","counter","setCounter","React","useState","Grid","container","spacing","item","xs","Fab","aria-label","size","onClick","Input","inputProps","style","textAlign","value","fullWidth","readOnly","onChange","console","log","Button","variant","color","onAction","disabled","connect","classes","img","description","showAdd","setAddProducts","enqueueSnackbar","useSnackbar","handleExpandClick","Card","className","onMouseLeave","onMouseEnter","CardContent","CardMedia","component","alt","height","image","title","Typography","gutterBottom","toFixed","howManyTimes","inCash","Collapse","in","message","dispatch","show","state","products","productsReducer","formErrors","form","clientData","syncErrors","totalPrice","withRouter","buyIsDisabled","undefined","length","history","push","theme","textField","marginLeft","marginRight","sexs","label","renderTextField","meta","touched","error","custom","TextField","checkError","renderSelectField","children","reduxForm","validate","values","errors","forEach","field","email","test","destroyOnUnmount","lg","Field","id","name","InputLabelProps","shrink","margin","placeholder","select","map","sex","MenuItem","key","paddingTop","paddingBottom","Products","Divider","justify","Box","display","flexDirection","flexWrap","alignSelf","pb","pt","maxHeight","Container","justifyContent","align","createMuiTheme","palette","primary","blue","secondary","orange","App","ThemeProvider","exact","path","FinalizedPurchase","initialState","combineReducers","action","productToAdd","amountToAdd","resultProduct","find","infoProduct","addProduct","reduxFormReducer","resetState","store","createStore","rootReducer","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.f24eeae3.chunk.js","sourcesContent":["/**\r\n * Products Actions Types\r\n */\r\nexport const ADD_PRODUCTS_TO_CARD = \"ADD_PRODUCTS_TO_CARD\";\r\n/**\r\n * Reset state to initialState\r\n */\r\nexport const RESET = \"RESET\";","import { ADD_PRODUCTS_TO_CARD } from './actionTypes';\r\n\r\nexport const addProductToCard = (product,amount) => ({\r\n    type: ADD_PRODUCTS_TO_CARD,\r\n    product,\r\n    amount\r\n});","//material-ui\r\nimport { Button, Collapse, Fab, Grid, Input } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n//react\r\nimport React from 'react';\r\n//fe-test-master\r\nimport './style.css';\r\nimport { addProductToCard } from '../../redux/actions/productsAction';\r\n//react-redux\r\nimport { connect } from 'react-redux';\r\n//notistack\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 345,\r\n        width: \"17em\",\r\n        minHeight: 387,\r\n        minWidth: 272\r\n    },\r\n    price: {\r\n        fontSize: \"1.2rem\"\r\n    },\r\n    method: {\r\n        fontSize: \"0.7rem\"\r\n    },\r\n    fab: {\r\n        fontSize: \"0.6em\"\r\n    },\r\n    input: {\r\n        alignItems: \"center\"\r\n    },\r\n    grid: {\r\n        marginTop: \"1em\"\r\n    }\r\n});\r\n\r\nconst AddComponent = (props) => {\r\n\r\n    function changeAmountValue(event, op) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (op === 'sum') plusCounter();\r\n        else if (op === 'subtraction') subtractionCounter();\r\n    }\r\n\r\n    function plusCounter() {\r\n        if (counter < 100) setCounter(counter + 1);\r\n    }\r\n\r\n    function subtractionCounter() {\r\n        if (counter > 0) setCounter(counter - 1);\r\n    }\r\n\r\n    function clearCount() {\r\n        setCounter(0);\r\n    }\r\n\r\n    const [counter, setCounter] = React.useState(0);\r\n\r\n    function onAction() {\r\n        props.onAction(counter);\r\n        clearCount();\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={3}>\r\n                <Fab aria-label=\"remove\" size=\"small\" onClick={(event) => changeAmountValue(event, 'subtraction')}>\r\n                    <RemoveIcon />\r\n                </Fab>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Input inputProps={{ style: { textAlign: 'center' } }} type='number' value={counter} fullWidth readOnly onChange={value => console.log(value)} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Fab aria-label=\"add\" size=\"small\" onClick={(event) => changeAmountValue(event, 'sum')}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth onClick={onAction} disabled={counter === 0} >\r\n                    Adicionar\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst CardComponent = (props) => {\r\n    const classes = useStyles();\r\n    const { img, description, price, method } = props.product;\r\n    const [showAdd, setAddProducts] = React.useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    function handleExpandClick() {\r\n        setAddProducts(showAdd => !showAdd);\r\n    }\r\n\r\n    function onSelectProduct(amount) {\r\n        props.dispatch(addProductToCard(props.product,amount));\r\n        showMessage(`${amount} ${amount > 1 ?  'produtos' : 'produto' } adicionados com sucesso`, { variant: \"success\" })\r\n    }\r\n\r\n    function showMessage(message, options) {\r\n        enqueueSnackbar(message, options)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.card} onMouseLeave={handleExpandClick} onMouseEnter={handleExpandClick} >\r\n            <CardContent>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"auto\"\r\n                    image={img}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n                    {description}\r\n                </Typography>\r\n                <Typography className={classes.price}>\r\n                    R$ {price.toFixed(2)}\r\n                </Typography>\r\n                <Typography className={classes.method}>\r\n                    Em até {method.howManyTimes}x de {(price / method.howManyTimes).toFixed(2)}\r\n                </Typography>\r\n                <Typography className={classes.method}>\r\n                    R$ {method.inCash.toFixed(2)} à vista (10% de desconto)\r\n                    </Typography>\r\n                <Collapse in={showAdd} >\r\n                    <AddComponent onAction={onSelectProduct} show={showAdd} ></AddComponent>\r\n                </Collapse>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default connect()(CardComponent);","//material-ui\r\nimport { Button, Typography } from '@material-ui/core';\r\n// react\r\nimport React from 'react';\r\n//react-redux\r\nimport { connect } from 'react-redux'\r\n//react-router-dom\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CheckOut = (props) => {\r\n    const { formErrors, products } = props;\r\n    ((props) => {\r\n        console.log(props);\r\n    })(props)\r\n\r\n    const buyIsDisabled = (formErrors !== undefined) || (products.length < 1);\r\n\r\n    function onNavigate() {\r\n        props.history.push('/finish');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                Total: R$ {props.totalPrice.toFixed(2)}\r\n            </Typography>\r\n\r\n            <Button size=\"large\" variant=\"contained\" color=\"secondary\" disabled={buyIsDisabled} onClick={onNavigate}>\r\n                <Typography style={{ color: \"#fff9f5\" }} color=\"textPrimary\">\r\n                    FINALIZAR COMPRA\r\n                </Typography>\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    const { productsReducer: { products } } = state;\r\n    const { form: { clientData: { syncErrors: formErrors } } } = state;\r\n    const { productsReducer: { totalPrice } } = state;\r\n\r\n    return {\r\n        products,\r\n        formErrors,\r\n        totalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(CheckOut));","// material-ui\r\nimport { Grid, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n// react\r\nimport React from 'react';\r\n//redux-form\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nconst sexs = [\r\n    {\r\n        value: \"male\",\r\n        label: \"Masculino\"\r\n    },\r\n    {\r\n        value: \"female\",\r\n        label: \"Feminino\"\r\n    }\r\n]\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n    const requiredFields = [\r\n        'name',\r\n        'sex',\r\n        'email'\r\n    ]\r\n    requiredFields.forEach(field => {\r\n        if (!values[field]) {\r\n            errors[field] = 'Required'\r\n        }\r\n    })\r\n    if (values.email && (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))) {\r\n        errors.email = \"Endereço de email invalido\"\r\n    }\r\n    return errors\r\n}\r\n\r\nconst renderTextField = ({\r\n    input,\r\n    label,\r\n    meta: { touched, error },\r\n    ...custom\r\n}) => {\r\n    return (\r\n\r\n        <TextField\r\n            label={label}\r\n            error={checkError(touched, error)}\r\n            {...input}\r\n            {...custom}\r\n        />\r\n    )\r\n}\r\n\r\nconst renderSelectField = ({\r\n    input,\r\n    label,\r\n    children,\r\n    meta: { touched, error },\r\n    ...custom\r\n}) => (\r\n        <TextField\r\n            label={label}\r\n            error={checkError(touched, error)}\r\n            {...input}\r\n            children={children}\r\n            {...custom}\r\n        >\r\n        </TextField>\r\n    )\r\n\r\n\r\n\r\nfunction checkError(touched, error) {\r\n    return touched && (typeof error === 'string');\r\n}\r\n\r\nconst ClientData = () => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <form>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={5}>\r\n                    <Field\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        component={renderTextField}\r\n                        label=\"Nome\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        fullWidth\r\n                        className={classes.textField}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        placeholder=\"Nome do cliente aqui\"\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={5}>\r\n                    <Field\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        component={renderTextField}\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        className={classes.textField}\r\n                        placeholder=\"Digite seu email aqui\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}>\r\n                    </Field>\r\n                </Grid>\r\n                <Grid item lg={2}>\r\n\r\n                    <Field\r\n                        id=\"sex\"\r\n                        name=\"sex\"\r\n                        component={renderSelectField}\r\n                        fullWidth\r\n                        select\r\n                        label=\"Sexo\"\r\n                        className={classes.textField}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    >\r\n                        {sexs.map(sex => (\r\n                            <MenuItem key={sex.value} value={sex.value}>\r\n                                {sex.label}\r\n                            </MenuItem>\r\n                        ))}\r\n\r\n                    </Field>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'clientData', validate,destroyOnUnmount:false })(ClientData);","// material-ui\r\nimport { Box, Divider, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// react\r\nimport React from 'react';\r\n// fe-test-master\r\nimport Card from '../Card';\r\nimport CheckOut from '../CheckOut';\r\nimport ClientData from '../Client-Data/index';\r\n\r\nconst useStyles = makeStyles({\r\n    products: {\r\n        maxWidth: \"80em\"\r\n    },\r\n    title: {\r\n        paddingTop: \"3em\",\r\n        paddingBottom: \"2em\"\r\n    }\r\n});\r\n\r\nconst Products = (props) => {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.products}>\r\n            <div className={classes.title} >\r\n                <Typography variant='h5'> Produtos </Typography>\r\n                <Divider></Divider>\r\n            </div>\r\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\" >\r\n                {\r\n                    props.products.map(product => {\r\n                        return <Grid key={product.img} item lg={3}><Card product={product} ></Card></Grid>\r\n                    })\r\n                }\r\n            </Grid>\r\n            <div className={classes.title} >\r\n                <Typography variant='h5'> Dados do Cliente </Typography>\r\n                <Divider></Divider>\r\n            </div>\r\n            <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n                <Box width=\"100vw\">\r\n                    <ClientData></ClientData>\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" width=\"100vw\" alignSelf=\"flex-end\">\r\n                    <Box alignSelf=\"flex-end\" pb={2} pt={2}>\r\n                        <CheckOut ></CheckOut>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;","//react\r\nimport React from 'react';\r\n//material-ui\r\nimport { Box, Container, makeStyles, Typography, Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\n//react-redux\r\nimport { connect } from 'react-redux';\r\n//fe-test-master\r\nimport { resetState } from '../../redux/actions/index';\r\n\r\nconst useStyles = makeStyles({\r\n    maxHeight: {\r\n        height: \"100vh\"\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n    },\r\n    img: {\r\n    }\r\n});\r\n\r\nconst FinalizedPurchase = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const onFinish = () => {\r\n        props.history.push('/');\r\n        props.dispatch(resetState())\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.maxHeight} style={{ height: \"100vh\" }} maxWidth=\"xl\" >\r\n            <Box className={classes.maxHeight} height=\"100vh\" display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" >\r\n                <Box>\r\n\r\n                    <Card\r\n                        className={classes.card}\r\n                    >\r\n                        <CardContent>\r\n                            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n                                <Grid item>\r\n\r\n                                    <Typography variant=\"h6\" align=\"center\">\r\n                                        {`${props.name},`}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item >\r\n\r\n                                    <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n                                        {`Sua compra no valor de R$ ${props.totalPrice.toFixed(2)} foi finalizada com sucesso`},\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <CardMedia\r\n                                        image=\"/assets/purchase.png\"\r\n                                        className={classes.img}\r\n                                        component=\"img\"\r\n                                        alt=\"purchase image\"\r\n                                    >\r\n                                    </CardMedia>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <Button size=\"large\" variant=\"contained\" color=\"secondary\" onClick={onFinish}>\r\n                                        <Typography style={{ color: \"#fff9f5\" }} color=\"textPrimary\">\r\n                                            FINALIZAR COMPRA\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateProps = (state) => {\r\n    const { productsReducer: { totalPrice } } = state;\r\n    const { form: { clientData: { values: { name } } } } = state;\r\n\r\n    return {\r\n        totalPrice,\r\n        name\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateProps)(FinalizedPurchase);\r\n","import { addProductToCard } from './productsAction';\r\nimport { RESET } from './actionTypes';\r\n\r\nconst resetState = () => ({\r\n    type: RESET\r\n});\r\n\r\nexport {\r\n    addProductToCard,\r\n    resetState\r\n}","// material-ui\r\nimport { Container } from '@material-ui/core';\r\nimport { blue, orange } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n// react\r\nimport React from 'react';\r\n// fe-test-master\r\nimport { products } from '../../data/products.json'; //imported products database\r\nimport Products from '../Products';\r\nimport FinalizedPurchase from '../Finalized-Purchase';\r\n//react-router-dom\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: orange\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <Container>\r\n          <Router>\r\n            <Route exact path=\"/\" component={() => (<Products products={products} ></Products>)} />\r\n            <Route path=\"/finish\" component={FinalizedPurchase} />\r\n          </Router>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import { ADD_PRODUCTS_TO_CARD, RESET } from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    products: [],\r\n    totalPrice: 0\r\n}\r\n\r\nfunction addProduct(state, action) {\r\n    let { products } = state;\r\n    let { product: productToAdd, amount: amountToAdd } = action;\r\n\r\n    let resultProduct = products.find(infoProduct => infoProduct.product.img === productToAdd.img); //using img how id\r\n    state.totalPrice += action.product.price * action.amount;\r\n    if (resultProduct) {\r\n        resultProduct.amount += amountToAdd;\r\n        return { ...state, products: [...products] };\r\n    } else {\r\n        return { ...state, products: [...products, { product: action.product, amount: action.amount }] };\r\n    }\r\n}\r\n\r\nexport default function productsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_PRODUCTS_TO_CARD:\r\n            return addProduct(state, action);\r\n        case RESET:\r\n            return {products: [], totalPrice: 0};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport productsReducer from './productsReducer';\r\nimport { RESET } from '../actions/actionTypes';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\n\r\nfunction resetState(state = {}, action) {\r\n    switch (action) {\r\n        case RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    productsReducer,\r\n    form: reduxFormReducer,\r\n    resetState\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App.js';\r\n//react-redux\r\nimport { Provider } from 'react-redux'\r\n//redux\r\nimport { createStore } from 'redux';\r\n// fe-test-master\r\nimport rootReducer from './redux/reducers/index';\r\n//notistack\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n\r\n    <Provider store={store}>\r\n        <SnackbarProvider maxSnack={3}>\r\n            <App />\r\n        </SnackbarProvider>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}